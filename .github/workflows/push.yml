name: build docker
on:
  push:
    branches:
      - master
jobs:
  build:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - name: Uso Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          check-latest: true
      - name: Checkout del repositorio
        uses: actions/checkout@v2
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install package dependencias
        run: sudo npm i -y
      # - name: Creando el test build
      #   run: npm run build
      - run: sudo apt update && sudo apt-get upgrade
      - run: sudo apt install apt-transport-https ca-certificates curl software-properties-common
      - run: sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
      - run: sudo apt update && sudo apt-get upgrade
      - run: sudo apt-cache policy docker-ce
      - run: sudo apt install docker-ce | sudo systemctl status docker | sudo docker run | sudo docker images
      - name: InstalaciÃ³n de docker compose
        run: sudo apt-get -y install apache2-utils | mkdir ~/docker-registry && cd $_ |  mkdir data | sudo docker compose up -d
      - name: creamos la config de nginx
        run: mkdir ~/docker-registry/nginx
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      #      - run: sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
      - run: docker-compose up -d
      - run: docker-compose ps
      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: >-
            ${{ runner.os }}-build-${{ env.cache-name }}-${{
             hashFiles('**/package-lock.json') }}
               restore-keys: |
             ${{ runner.os }}-build-${{ env.cache-name }}-
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: built-project
          path: build
          retention-days: 1
      - uses: actions/checkout@master
      - uses: docker/build-push-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tag_with-ref: true
          tag_with_sha: true
          tags: ${{ github.sha }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: user/app:latest
#   run-name:
#     needs: build
#     name: deploy to docker
#     runs-on: self-hosted
#     steps:
#       - uses: actions/checkout@master
#       - uses: docker/build-push-action@v1
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}
#           tag_with-ref: true
#           tag_with_sha: true
#           tags: ${{ github.sha }}
